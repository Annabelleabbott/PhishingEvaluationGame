from flask import request, jsonify, render_template
from flask_pymongo import PyMongo


def init_routes(app, mongo):
    @app.route('/')
    def index():
        collections = mongo.db.list_collection_names()
        return render_template('index.html', collections=collections)


    @app.route('/add_email')
    def add_email():
        email = {
            "subject": "Test Email",
            "content": "This is a test email.",
            "type": "Legitimate",
            "source": "Human"
        }
        mongo.db.emails.insert_one(email)
        return "Email added!"

    @app.route('/get_emails')
    def get_emails():
        emails = mongo.db.emails.find()
        return str(list(emails))

    @app.route('/submit_user_data')
    def submit_user_data():
        """
        Category 1 condition: user response if they believe email was generated by LLM or Human (determined by buttons selected)
        Category 2 condition: user response if they believe email is phishing email or legitamate email
        """
        # Here you can access the data sent from the frontend using request.form or request.json
        user_data = request.json  # Example for JSON data
        # Still need to implement the logic here to handle user data (LLM vs Human AND Phishing vs Legit)
        return jsonify({"message": "User data received"})
